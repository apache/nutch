# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: master pull request ci
on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [master]
jobs:
  javadoc:
    strategy:
      matrix:
        java: ['11']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4.5.0
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
      - name: Javadoc
        run: ant clean javadoc -buildfile build.xml
  rat:
    strategy:
      matrix:
        java: ['11']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4.5.0
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
      - name: Run Apache Rat
        run: ant clean run-rat -buildfile build.xml
      - name: Cache unknown licenses
        run: echo "UNKNOWN_LICENSES=$(sed -n 18p /home/runner/work/nutch/nutch/build/apache-rat-report.txt)" >> $GITHUB_ENV
      - name: Versions
        run: |
          echo $UNKNOWN_LICENSES
      - name: Fail if any unknown licenses
        if: ${{ env.UNKNOWN_LICENSES != '0 Unknown Licenses' }}
        run: exit 1
  tests:
    strategy:
      matrix:
        java: ['11']
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out Repository
        uses: actions/checkout@v4.2.2
        # Disabling shallow clone is recommended for improving sonarcloud reporting
        with:
          fetch-depth: 0
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4.5.0
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
      - name: Filter 'core' and 'plugins' paths
        uses: dorny/paths-filter@v3.0.0
        id: filter
        with:
          filters: |
            core:
              - 'src/java/**'
              - 'src/test/**'
              - 'src/testresources/**'
            plugins:
              - 'src/plugin/**'
      # run only if 'core' files were changed
      - name: Test core
        if: steps.filter.outputs.core == 'true'
        run: ant clean test-core -buildfile build.xml
      # run only if 'plugins' files were changed
      - name: Test plugins
        if: steps.filter.outputs.plugins == 'true'
        run: ant clean test-plugins -buildfile build.xml
      - name: Fix code coverage paths
        if: |
          steps.filter.outputs.core == 'true' ||
          steps.filter.outputs.plugins == 'true'
        run: |
          find . -name jacoco_report.xml -exec sed -i 's#/home/runner/work/nutch/nutch#/github/workspace#g' {} +
      - name: Analyze with SonarCloud
        if: |
          steps.filter.outputs.core == 'true' ||
          steps.filter.outputs.plugins == 'true'
        uses: sonarsource/sonarcloud-github-action@v3.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=apache
            -Dsonar.projectKey=apache-nutch
            -Dsonar.sources=src/java
            -Dsonar.test.exclusions=src/test/**
            -Dsonar.tests=src/test/
            -Dsonar.verbose=true
            -Dsonar.java.binaries=build/classes,build/**/classes
            -Dsonar.java.libraries=build/lib/*.jar   
            -Dsonar.java.test.binaries=build/test/classes/,build/**/test/
            -Dsonar.java.test.libraries=build/test/lib/*.jar
            -Dsonar.java.source=11
