# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# the bandit lambda which sets the proportion of random selections
bandit.lambda=0.1
# the size of the domain queue to be used within Anthelion. As the domains
# are kept in cache anyway in the queue just has references, the size
# should only influence the needed memory slightly. As the Score of a
# domain takes also the times the same domain is enqueued into account this
# has an effect on the variation of domains picked.
domain.queue.size=1000
# the minimal number of domains added in the overall knownDomain list,
# before Anthelion starts considering any domains to be enqueued
domain.known.min=1
# Sets the number of seconds to wait for adding a domain to 
# queue - as the size of the queue is limited
# time in seconds
domain.queue.offertime=3600
# class name of the value function which should be used
# the class must implement the interface DomainValueFunction.java
domain.value.function=org.apache.nutch.anthelion.models.banditfunction.DomainHolisticFunction
# the size of the used attributes for the hash trick
classifier.hashtricksize=10000
# the name of the classifier which should be used
# possible values: NaiveBayes, DecisionStump, HoeffdingTree, HoeffdingAdaptiveTree, AdaHoeffdingTree
classifier.name=NaiveBayes
# the options for the classifier (null or a String e.g. "-z")
classifier.options=
# sets the number of instances which should be waited in between to learn
# the classifier. Has just a small effect.
classifier.learn.batchsize=5
# the mode of classification used. Currently implemented: OnDemand and OnExplore
classifier.mode=OnExplore
# the penalty given to Domains which have to many outstanding urls they
# have not received feedback from, this is a Bandit function specific thing
domain.value.function.missingfeedbackpenalty=0.1
# maximal fraction of the queue which can be occupied by the same domain
domain.queue.fraction=0.5
# sets the minimal number of URLs which should be in the input queue
# before the anthelion module starts working
inputlist.size=5
# time in ms the crawler will wait if he has nothing todo to check if there is something new
crawler.waitingtime=100
